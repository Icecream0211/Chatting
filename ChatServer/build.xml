<?xml version="1.0" encoding="UTF-8" ?>
<project name="ChatServer" default="dist" basedir=".">
	<tstamp>  
        <format property="now.date" pattern="yyyy-MM-dd" locale="zh" />  
    </tstamp>
   
	 <!--主要的app环境属性-->
    <property name="app.name"      value="chat-server"/>
    <property name="app.jar"       value="${app.name}-${now.date}.jar"/>
    <property name="app.copyright" value=" Copyright (c) 2012 Bing Wang.  All rights reserved."/>

	<!--app中src的属性-->
	<property name="src.dir" value="${basedir}/src"/>

	<!--app用到的lib-->
	<property name="lib.dir" value="${basedir}/lib"/>

	<!--app的build目录中-->
    <property name="build.dir"      value="build" />
    <property name="build.classes"  value="${build.dir}/classes"/>
    <property name="build.docs"     value="${build.dir}/docs"/>
    <property name="build.docs.api" value="${build.docs}/api"/>
    <property name="build.lib"      value="${build.dir}/lib"/>

	<!--app的dist (distribution) 目录中-->
    <property name="dist.dir"      value="dist"/>
    <property name="dist.bin"      value="${dist.dir}/bin"/>
    <property name="dist.docs"     value="${dist.dir}/docs"/>
    <property name="dist.lib"      value="${dist.dir}/lib"/>

	<!--项目公共包的引入-->
	<!--property name="chatcommon.jar" /-->
    <property name="chat.common.jar.name" value="${chatcommon.jar}"/>
	<property name="chat.common.jar" value="${chatcommon}/dist/bin/${chat.common.jar.name}"/>

	<target name="init">
		<!--清除以前目录-->
		<antcall target="clean" ></antcall>

		<tstamp/>
        <!--准备目录-->
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${build.classes}"/>
        <mkdir dir="${build.docs}"/>
        <mkdir dir="${build.docs.api}"/>
        <mkdir dir="${build.lib}"/>

        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${dist.bin}"/>
        <mkdir dir="${dist.lib}"/>
		<mkdir dir="${dist.docs}"/>
		<copy file="${chat.common.jar}" tofile="${build.lib}/${chat.common.jar.name}" />
		<copy todir="${build.lib}">
			<fileset dir="${lib.dir}"/>
		</copy>
	</target>

	<path id="project.class.path">
		 <fileset dir="${build.lib}">
				<include name="**/*.jar"/>
	     </fileset>
	</path>

	<!--target name="run" depends="archive">   
            <java jar="${app.jar}" fork="true" maxmemory="256m"/>   
      </target
	-->   

	<target name="compile" depends="init">
		<javac srcdir="${src.dir}"   destdir="${build.classes}">
		 <compilerarg  line="-encoding UTF-8 "/>   
		 <compilerarg  value="-Xlint:unchecked"/>
			<classpath refid="project.class.path" />
		</javac>
	</target>

	<target name="archive" depends="compile">
		<jar basedir="${build.classes}" jarfile="${build.dir}/${app.jar}">
			 <fileset dir="${build.classes}" includes="**/*.*" />
			 <manifest>
                <attribute name="Main-class" value="com.bing.chatserver.DaemonServer"/>
                <attribute name="Class-path" value=""/>
			</manifest>
		</jar>
	</target>
	<!--
     ===================================================================
       Creates the API documentation
     ===================================================================
	-->
    <target name="javadocs" depends="archive"
            description="--> creates the API documentation"> <!--copy docs 手册... -->
        <javadoc packagenames="com.*"
                 sourcepath="${src.dir}"
                 defaultexcludes="yes"
                 destdir="${build.docs.api}"
                 author="true"
                 version="true"
                 use="true"
				 encoding="UTF-8"
				 docencoding="UTF-8"
                 windowtitle="Docs API">
             <doctitle><![CDATA[<h1>hello ant Docs API</h1>]]></doctitle>
             <bottom><![CDATA[<i>${app.copyright}</i>]]></bottom>
             <tag name="todo" scope="all" description="To do:" />
         </javadoc>
    </target>

	<!--
     ===================================================================
       Create the distribution that can run (Archive Tasks)
       主要是从各目录中把该copy的copy上
     ===================================================================
	-->
   <target name="dist" depends="javadocs">
        <!--copy bin 执行文件 -->
        <copy file="${build.dir}/${app.jar}" todir="${dist.bin}">
        </copy>
        <copy todir="${dist.docs}">
            <fileset dir="${build.docs}/"/>
        </copy>
        <!-- copy lib 文件 -->
        <copy todir="${dist.lib}">
            <fileset dir="${build.lib}/"/>
        </copy>
		<touch file="${dist.bin}/run.bat"/>
		<echo file="${dist.bin}/run.bat" message="java -Djava.ext.dirs=%CLASSPATH%;../lib -jar ${app.jar}"/>
    </target>
	<!--
     ===================================================================
	  Cleans everything(File Tasks)
     ===================================================================
	-->
	<target name="clean" description="Cleans up all build-generated output">
		<delete dir="${dist.dir}" failonerror="false"/>
		<delete dir="${build.dir}" failonerror="false"/>
	</target>
</project>
